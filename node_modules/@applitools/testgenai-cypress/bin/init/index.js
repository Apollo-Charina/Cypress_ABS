#!/usr/bin/env node
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = require("fs");
const path_1 = require("path");
const cypress_config_1 = require("./cypress-config");
const e2e_config_1 = require("./e2e-config");
const helpers_1 = require("./helpers");
const init = () => __awaiter(void 0, void 0, void 0, function* () {
    const cypressDir = (0, path_1.join)(process.cwd(), 'cypress');
    if (!(0, fs_1.existsSync)(cypressDir)) {
        console.error('Error: Cypress directory not found. Are you running this command in the correct project directory?');
        console.error('Please make sure you are in the root directory of your Cypress project.');
        process.exit(1);
    }
    (0, e2e_config_1.default)(`./`);
    (0, cypress_config_1.default)(`./`);
    (0, helpers_1.createDirectory)('./cypress/testgenai/autoheal');
    (0, helpers_1.createDirectory)('./cypress/testgenai/POMs');
});
init()
    .then(() => {
    console.log('The Applitools TestGenAI plugin was successfully installed');
})
    .catch(err => {
    let messages = err.message.split('\n');
    messages.push(`\nPlease refer to the documentation for manual installation instructions: https://www.npmjs.com/package/@applitools/testgenai-cypress`);
    console.error(messages.join('\n'));
});
