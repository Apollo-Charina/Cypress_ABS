(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{49:function(e,t,a){"use strict";a.r(t);var o=a(2),s=a(0),n=a(1),i=a(11),l=a(23),r=(a(1542),a(1543),a(27)),d=a(48),u=a(12),c=a(20),g=a(6),p=a(3),b=a(22),h=a(14),f=a(4),m=a(46),w=a(9),T=a(47);function y(e,t){if(s.a.options.isEnabled&&s.a.options.debug.isAutohealEnabled)return console.debug(t),t.forEach(t=>{let a=Object(o.d)(Object(o.e)(t.originalSelector)),n=String.raw`cy\.initializeAutoheal\('${s.a.state.currentTestId}'.*\).*cy\.getAI\('(${a})'`;const i=new RegExp(n,"gms");e=e.replace(i,(e,a,o)=>e.replace(a,t.newSelector))}),e}function C(e,t,a,o,i=s.a.options.getElementTimeout){return n.a.debug("[START] getElement ",{selector:e,elementId:t}),new Cypress.Promise(async(s,r)=>{try{let r=await l.a.findElement(e,t,a,o,i);if(!r)return n.a.debug("get-END","NO RESULT"),void s(null);g.a.elementFixes(r.element),n.a.debug("get-END",r.element?r.element.outerHTML:"no Element"),s(r.element)}catch(e){n.a.debug("get-EXCEPTION",e.message),r(e.message)}})}Cypress.on("window:before:load",(e,t)=>{s.a.options.isEnabled&&(n.a.debug("[EVENT] on window:before:load"),Object(p.g)())}),Cypress.on("window:load",(e,t)=>{if(s.a.options.isEnabled){n.a.debug("[EVENT] on window:load"),Object(p.g)();try{s.a.options.debug.recordTestRun&&b.a.startRecording()}catch(e){n.a.debug("rrwebRecorder.startRecording exception",e.message)}}}),afterEach(()=>{g.a.globalFixesStop(),n.a.debug("//TEST FINISHED --------------------",Cypress.currentTest.title),n.a.cyFlushToFile();try{if(s.a.options.debug.recordTestRun){let e=`debug/testRun_${s.a.state.currentTestId||s.a.state.testTitle}(${s.a.testsStart.toISOString().slice(0,19).replaceAll(":","-")}).zip`;return cy.wrap(b.a.getRecorderEventsZipped(),{log:!1}).then(t=>cy.wrap(Object(o.b)(t),{log:!1}).then(t=>cy.writeFilePF(e,t,{encoding:"binary",isBase64:!0})))}}catch(e){n.a.debug("rrwebRecorder.getRecorderEventsZipped exception",e.message)}}),Cypress.Commands.add("initializeAutoheal",e=>{if(!s.a.options.isEnabled||!s.a.options.debug.isAutohealEnabled)return;n.a.debug("[ACTION START] initializeAutoheal",e),s.a.state.currentTestId=e;window.location.href;return function(e){if(!s.a.options.isEnabled)return;if(n.a.debug("[START] preloadTestAutohealData ",e),s.a.state.autohealDataCache.test[e])return s.a.state.autohealDataCache.test[e];return f.a.getTestAutohealDataFromLocalFile(e).then(t=>{s.a.state.autohealDataCache.test[e]={data:JSON.parse(t.content),testedPaths:t.testedPaths,filePath:t.path}})}(e)}),Cypress.Commands.add("setCurrentPomAutohealDataId",e=>{if(s.a.options.isEnabled&&s.a.options.debug.isAutohealEnabled)return n.a.debug("[ACTION START] setCurrentPomAutohealDataId"),s.a.state.currentPomAutohealDataId=e,function(e){if(!s.a.options.isEnabled)return;if(n.a.debug("[START] preloadPomAutohealData ",e),s.a.state.autohealDataCache.pom[e])return s.a.state.autohealDataCache.pom[e];return f.a.getPomAutohealDataFromLocalFile(e).then(t=>{s.a.state.autohealDataCache.pom[e]={data:JSON.parse(t.content),testedPaths:t.testedPaths,filePath:t.path}})}(e)}),Cypress.on("fail",(e,t)=>{if(s.a.options.isEnabled)throw n.a.debug("\n\n//TEST FAILED  --------------------",{error:e.message,body:t.body,autohealData:s.a.state.currentTestData}),new w.a(e)}),Cypress.on("uncaught:exception",(e,t)=>{if(s.a.options.isEnabled)return n.a.debug("Cypress uncaught:exception",{error:e.message,body:t.body}),!1}),beforeEach((function(){try{if(!s.a.options.isEnabled)return;n.a.debug("[EVENT] beforeEach"),s.a.initialize(),b.a.restart();const e=[Object(r.a)(),"cypress/Preflight"],t=[Object(r.a)(),"cypress/Preflight","cypress/fixtures",Cypress.config("fixturesFolder")];let a={...u.a.defaults,...Cypress.env(T.a.cypressConfigNamespace)||{}};a.debug={...u.a.defaults.debug,...a.debug||{}},a.waitToDisappear={...u.a.defaults.waitToDisappear,...a.waitToDisappear||{}},s.a.options=a,s.a.options.autohealDataFolders=[...a.autohealDataFolders,...e],s.a.options.fixtureDataFolders=[...t,...a.fixtureDataFolders],s.a.options.debug={...s.a.options.debug,...a.debug},Object(o.o)(s.a.options.showXHRLogs),s.a.state.testTitle=Cypress.currentTest.title,n.a.debug("\n\n//START TEST --------------------",Cypress.currentTest.title),g.a.globalFixesStart(),cy.on("window:confirm",()=>s.a.state.confirmDialogResponse)}catch(e){n.a.debug("beforeEach exception",e.message)}})),before((function(){try{if(n.a.debug(`PreflightGlobalStore (${s.a.version}): ${JSON.stringify(s.a.options)}`,s.a.options),!s.a.options.isEnabled)return;n.a.debug("[EVENT] before"),s.a.fixedFiles=[],s.a.testsStart=new Date,cy.exec('mkdir "cypress/Preflight"',{log:!1,failOnNonZeroExit:!1})}catch(e){n.a.debug("before exception",e.message)}})),Cypress.Commands.add("tab",{prevSubject:["optional","element"]},e=>{n.a.debug("[ACTION START] tab"),g.a.elementFixes(e[0]);let t=cy.state("window");return e[0]?(new d.a(t.document,e[0]).process(),n.a.log("tab",null,e[0]),t.document.activeElement):(n.a.log("tab","Element not found",e[0]),null)}),Cypress.Commands.add("readFileIfExists",(e,t)=>{n.a.debug("[ACTION START] readFileIfExists",{fileName:e});let a=[];(t=[...t]).unshift("");let o=t.shift(),s=o?`${o}/${e}`:e;return a.push(s),function s(i){return n.a.log("Reading file from "+i),cy.task("readFileIfExists",i,{log:!1}).then(l=>l?(n.a.log("File found on "+i),{path:i,testedPaths:a,content:l}):t.length>0?(o=t.shift(),s(i=o?`${o}/${e}`:e)):(n.a.log("File not found"),{path:null,testedPaths:a,content:null}))}(s)}),Cypress.Commands.add("fileUpload",{prevSubject:!0},(e,t)=>(n.a.debug("[ACTION START] fileUpload"),g.a.elementFixes(e),cy.readFileIfExists(t,s.a.options.fixtureDataFolders).then(a=>{if(!a.path)throw new w.a(`**File "${t} not found.** \nSearched in following locations:\n${a.testedPaths.join("\n")}"`);n.a.debug("cy.selectFile({ force: true })"),cy.wrap(e,{log:!1}).selectFile(a.path,{force:!0})}))),Cypress.Commands.add("hover",{prevSubject:!0},(e,t)=>(n.a.debug("[ACTION START] hover"),g.a.elementFixes(e),n.a.log("hover",t),cy.wrap(e,{log:!1}).trigger("mouseenter").trigger("mouseover").trigger("mousemove"))),Cypress.Commands.overwrite("visit",(e,t,a)=>(n.a.debug("[ACTION START] visit",t),e(t,a))),Cypress.Commands.overwrite("trigger",(e,t,a)=>(n.a.debug("[ACTION START] trigger"),g.a.elementFixes(t),e(t,a).catch(e=>{n.a.debug("trigger exception 1",e.message),n.a.warning("exception",e.message)}))),Cypress.Commands.overwrite("click",(e,t,a)=>(n.a.debug("[ACTION START] click"),g.a.elementFixes(t),e(t,a).catch(o=>(n.a.debug("click exception 1",o.message),n.a.warning("exception",o.message),n.a.warning("click","Click will be forced"),g.a.elementFixes(t),e(t,{...a,force:!0}).catch(e=>{if(n.a.debug("click exception 2",e.message),n.a.warning("click-exception",e?e.message:null),!t)throw n.a.warning("click","Element to click not found"),new w.a(e.message);n.a.warning("click","Native JS click will be applied");try{t.click()}catch(t){throw console.warn("native-click",t.message),new w.a(e.message)}}))))),Cypress.Commands.overwrite("type",(e,t,a,o)=>(n.a.debug("[ACTION START] type",n.a.maskString(a)),g.a.elementFixes(t),new Cypress.Promise(async(s,i)=>{try{t||i("Element cannot be null."),n.a.debug("type",{value:n.a.maskString(a)}),a=await l.a.replaceVariables(a),s(e(t,a,o))}catch(e){i(e.message)}}))),Cypress.Commands.overwrite("should",(e,t,a,i,r={})=>(n.a.debug("[ACTION START] should",n.a.maskString(i)),g.a.elementFixes(t),new Cypress.Promise(async(e,a)=>{try{i=(await l.a.replaceVariables(i)).trim();let a=Object(o.f)(t);if(Object(o.h)(a,i)||r.optional)Object(p.a)(a,i),e();else{n.a.log("should",`Found element has value "**${a.textContent}**" but expected is "**${i}**".`,a);let t=Cypress.mocha.getRunner().suite.ctx.test.title,[o,l,r]=Object.values(s.a.state.lastGetOptions),d=new c.a(o,r,l,t),u=await d.process(s.a.options.getElementTimeout,i);Object(p.a)(u,i),e()}}catch(a){Object(p.a)(Object(o.f)(t),i),e()}}))),Cypress.Commands.add("waitToDisappear",(e,t,a=null)=>{if(!s.a.options.waitToDisappear.isEnabled)return;n.a.debug("[ACTION START] waitToDisappear",{selector:e,optionsOrElementId:t,possibleElementId:a});let i="number"==typeof t||"string"==typeof t,l=i?t:a,r=(i?{}:t)||{};cy.handleModalDialogs(Object(p.b)(r));let d=r.searchElementTimeout||s.a.options.waitToDisappear.searchElementTimeout,u=r.timeout||s.a.options.waitToDisappear.timeout;n.a.log("waitToDisappear",`Element with selector "${e}"`);let c=null;return cy.wrap(null,{timeout:12e4,log:!1}).then({timeout:12e4},()=>C(e,l,r,"",d).then(e=>{n.a.log("waitToDisappear",`Element found, waiting to disappear up to ${u/1e3}s`);let t=e.innerText.trim();const a=(e,t)=>{if(!e)return!1;let a=e.innerText.trim()!=t;return Object(o.i)(e)&&null!=e.ownerDocument.defaultView&&!a};let s=0;return n.a.debug("waitToDisappear waitForAssertion START"),Object(p.h)(()=>{try{let o=a(e,t);if(s<Date.now())return n.a.debug("Waiting for element to disappear",{isPresent:o}),s=Date.now()+2e3,!o}catch(e){return n.a.debug("Waiting for element exception",e.message),!1}},u).then({timeout:12e4},()=>{if(a(e,t)){let e=`Element didn't disappear after ${u/1e3}s`;if(c=new w.a(e,{cause:"elementNotDisappeard"}),r.failTestIfNotDisappear)throw c;n.a.warning(e)}})}).catch(t=>{if("elementNotDisappeard"==t.cause)throw n.a.debug("waitToDisappear waitForAssertion CATCH",t.message),new w.a(t.message);n.a.warning("waitToDisappear",`Element not found. Selector "${e}"`)})).then(()=>(n.a.debug("[ACTION END] waitToDisappear"),n.a.cyFlushToFile()))}),Cypress.Commands.add("waitNetworkCalls",e=>{if(s.a.options.isEnabled){if(n.a.debug("[ACTION START] waitNetworkCalls",Object(p.f)().networkShimInjected),s.a.options.waitForNetworkCalls.isEnabled){if(n.a.debug("[ACTION START] waitNetworkCalls",{solution:s.a.options.debug.waitForNetworkCallsSolution}),2==s.a.options.debug.waitForNetworkCallsSolution){let e=Date.now(),t=0;return n.a.debug("waitNetworkCalls waitForAssertion START",Object(p.f)().areAllRequestsDone),Object(p.h)(()=>!Object(p.g)()||(Date.now()-e>5e3&&(n.a.log("waitNetworkCalls","Waiting for network calls to finish"),e=Date.now()),t<Date.now()&&(n.a.debug("waitNetworkCalls - Waiting for network calls to finish",Object(p.e)()),t=Date.now()+1e3),Object(p.f)().areAllRequestsDone),s.a.options.waitForNetworkCalls.timeout)}return n.a.debug("[ACTION END] waitNetworkCalls",{solution:s.a.options.debug.waitForNetworkCallsSolution}),cy.wait(100)}n.a.debug("[ACTION START] waitNetworkCalls is DISABLED")}}),Cypress.Commands.add("getAI",(e,t,a=null)=>{n.a.debug("[ACTION START] getAI",{selector:e,optionsOrElementId:t,possibleElementId:a});let o="number"==typeof t||"string"==typeof t;n.a.debug("getAI - isOptionsActionId",o);let i=o?t:a;n.a.debug("getAI - elementId",i);let l=(o?{}:t)||{};return n.a.debug("getAI - getOptions",l),e.startsWith(":cy")?(n.a.debug("getAI (:cy))"),cy.get(e,t)):(n.a.debug("getAI - selector.startsWith(':cy')",e),s.a.state.lastGetOptions={selector:e,elementId:i,getOptions:l},n.a.debug("getAI - PreflightGlobalStore.state.lastGetOptions",s.a.state.lastGetOptions),n.a.cyFlushToFile().then(()=>(n.a.debug("getAI - loggerService.cyFlushToFile"),cy.waitNetworkCalls().then(()=>(n.a.debug("getAI - cy.waitNetworkCalls"),cy.handleModalDialogs(Object(p.b)(l)).then(()=>(n.a.debug("getAI - cy.handleModalDialogs"),cy.getInner(e,i,l))))))))}),Cypress.Commands.add("getInner",(e,t,a)=>{n.a.debug("[ACTION START] getInner",{selector:e,elementId:t,getOptions:a});let o=Cypress.mocha.getRunner().suite.ctx.test.title;return n.a.debug("getInner - testTitle",o),C(e,t,a,o)}),Cypress.Commands.add("ifExists",(e,t,a=null)=>{n.a.debug("[ACTION START] ifExists",{selector:e,optionsOrElementId:t,possibleElementId:a});let o="number"==typeof t||"string"==typeof t,i=o?t:a,l=(o?{}:t)||{};return cy.waitNetworkCalls(),cy.handleModalDialogs(Object(p.b)(l)),cy.wrap(null,{timeout:12e4,log:!1}).then({timeout:12e4},()=>C(e,i,l,"",s.a.options.ifExistsTimeout).then(t=>(n.a.log("ifExists",`Element found. Selector "${e}"`),cy.wrap(t,{log:!1,timeout:12e4}))).catch(t=>{n.a.warning("ifExists",`Element not found. Selector "${e}"`)}))}),Cypress.Commands.add("setConfirmDialogResponse",e=>{n.a.debug("[ACTION START] setConfirmDialogResponse"),s.a.state.confirmDialogResponse=!!e,n.a.log("setConfirmDialogResponse","All confirm dialogs will be now "+(s.a.state.confirmDialogResponse?"confirmed":"canceled"))}),Cypress.Commands.add("handleModalDialogs",e=>{if(s.a.options.isEnabled&&s.a.options.debug.isHandlingModalDialogsEnabled&&e.length){n.a.debug("[ACTION START] handleModalDialogs",e);for(const[t,a]of e.entries()){const o=e.slice(0,t);cy.getInner(a,null,{parentSelectors:o}).then(e=>{const t=e?e[0]:null;if(t&&["IFRAME","FRAME"].some(e=>e===t.tagName)){const e=t.contentWindow;if(e.alertWrapped)return;e.alertWrapped=!0,cy.stub(e,"alert").callsFake(()=>!0),cy.stub(e,"confirm").callsFake(()=>s.a.state.confirmDialogResponse)}})}}}),Cypress.Commands.add("writeFilePF",(e,t,a={append:!1})=>{let o=t.length>200?t.substring(0,200)+"...":t;if(s.a.options.isEnabled&&s.a.options.debug.isWritingToFilesEnabled)return console.debug("[ACTION START] writeFilePF",{filePath:e,contentPreview:o,options:a}),cy.task("writeFile",{filePath:e,content:t,options:a},{log:!1});console.debug("[ACTION START] writeFilePF is disabled",{filePath:e,contentPreview:o,options:a})}),Cypress.Commands.add("autoheal",()=>{if(!s.a.options.isEnabled||!s.a.options.debug.isAutohealEnabled)return;n.a.debug("[ACTION START] autoheal");let e=s.a.state.testReport;if(!e||e.length<=0)return;let t=1;(function(e){if(!s.a.options.isEnabled||!s.a.options.debug.isAutohealEnabled)return;try{if(n.a.debug(e.length),!e)return;let t=e.filter(e=>e.pomAutohealDataId);return function(e){if(!s.a.options.isEnabled||!s.a.options.debug.isAutohealEnabled)return;if(n.a.debug(e.length),!e||e.length<=0)return cy.wait(1,{log:!1});let t=f.a.getTestAutohealDataFileCache(s.a.state.currentTestId)||{};t.filePath=t.filePath||f.a.getDefaultAutohealDataFolderPath(s.a.state.currentTestId),t.data=t.data||new m.a;let a=t.data;return a.actions=a.actions||[],e.forEach(e=>{let t=e.actionContextId||e.newSelector,o=f.a.getActionAutohealByContextId(a,t);if(o){let a=new h.a(o.data),s=a.replaceSelectorsData(e.autohealData);s=a.replaceContextAwarenessData(s),s=a.replaceExpectedInnerTextData(s),o.data=s.data,o.selector=t}else a.actions.find(e=>e.selector==t)||a.actions.push({selector:t,data:e.autohealData.data})}),cy.writeFile(t.filePath,JSON.stringify(t.data))}(e.filter(e=>!e.pomAutohealDataId))||async function(e){if(!s.a.options.isEnabled||!s.a.options.debug.isAutohealEnabled)return;if(n.a.debug(e.length),!e||e.length<=0)return cy.wait(1,{log:!1});let t=[];for(let a of e){if(!t[a.pomAutohealDataId]){let e=f.a.getPomAutohealDataFileCache(a.pomAutohealDataId)||{};e.filePath=e.filePath||f.a.getDefaultPomAutohealDataFolderPath(a.pomAutohealDataId),e.data=e.data||[],t[a.pomAutohealDataId]=e}let e=t[a.pomAutohealDataId];e.data=e.data||[];let o=a.actionContextId||a.newSelector,s=e.data.find(e=>e.autohealKey===o);s||(s={autohealKey:o,data:[]},e.data.push(s)),s.data=a.autohealData}let a=Object.values(t),o=a.pop();return cy.writeFile(o.filePath,JSON.stringify(o.data)).then(e=>{if(o=a.pop(),o)return cy.writeFile(o.filePath,JSON.stringify(o.data))})}(t)}catch(e){n.a.log("updateAutohealData failed",e.message)}})(e).then(()=>{if(!s.a.options.generateFixedTests)return;let a=Cypress.mocha.getRunner().test.invocationDetails.absoluteFile,i=e.filter(e=>Object(o.n)(e.originalSelector)!=Object(o.n)(e.newSelector)&&!e.pomAutohealDataId);if(i.length<=0)return;cy.task("logToConsole","Update selectors in "+a),i.forEach(e=>{let a=`${t}. Replace selector '${e.originalSelector}' with '${e.newSelector}'\n`;t++,n.a.log("update request",a),cy.task("logToConsole",a)});let l=a+`_fixed(${s.a.testsStart.toISOString().slice(0,19).replaceAll(":","-")})`;if(s.a.fixedFiles[a])return s.a.fixedFiles[a]=y(s.a.fixedFiles[a],i),cy.writeFile(l,s.a.fixedFiles[a]).then(()=>{n.a.log("autoheal completed","Updated file: "+l)});cy.readFile(a).then(e=>(s.a.fixedFiles[a]=y(e,i),cy.writeFile(l,s.a.fixedFiles[a]).then(()=>{n.a.log("autoheal completed","Updated file: "+l)})))})}),i.a.RequestFunction=(e,t,a,o,s,n)=>new Cypress.Promise((i,l)=>{Cypress.backend("http:request",{method:e,url:t,auth:n?{bearer:n}:null,log:!1,headers:{"Content-Type":s},encoding:"blob"==o?"binary":"utf8",body:a}).then(e=>{e.status>=200&&e.status<300?i(e):l(e)})})}}]);